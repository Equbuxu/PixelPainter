<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GUIPixelPainter.GUI">
    <SolidColorBrush x:Key="WhiteText" Color="#cccccc"></SolidColorBrush>
    <SolidColorBrush x:Key="Borders" Color="#3c3c3c"></SolidColorBrush>
    <SolidColorBrush x:Key="WindowBackground" Color="#1e1e1e"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBrush" Color="#3c3c3c"></SolidColorBrush>
    <SolidColorBrush x:Key="ButtonHighlightBrush" Color="#505050"></SolidColorBrush>

    <Style TargetType="GridSplitter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource Borders}" BorderThickness="2" Width="3"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RepeatButton" x:Key="SliderRepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Slider">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <TickBar x:Name="TopTick" Visibility="Visible" Fill="Black" Placement="Top" Height="8" Grid.Row="0"/>
                        <TickBar x:Name="BottomTick" Visibility="Visible" Fill="Black" Placement="Bottom" Height="8" Grid.Row="0"/>
                        <Border Background="{StaticResource Borders}" Height="4.0" VerticalAlignment="Center" Margin="5"></Border>
                        <Canvas Margin="-6,-1">
                            <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4.0" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                           Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0"/>
                        </Canvas>
                        <Track x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="{x:Static Slider.DecreaseLarge}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="{x:Static Slider.IncreaseLarge}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="Black">
                                    <Thumb.Style>
                                        <Style TargetType="Thumb">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Thumb">
                                                        <Rectangle Fill="#acacac" Width="10" Height="18"></Rectangle>

                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListView">
        <Setter Property="Background" Value="{StaticResource WindowBackground}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource Borders}"></Setter>
    </Style>
    <Style TargetType="ListViewItem">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteText}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{StaticResource WindowBackground}" Name="Bg">
                        <ContentPresenter Margin="5" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#3c3c3c"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bg" Property="Background" Value="#505050"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RepeatButton" x:Key="ScrollRepeatButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Thumb" x:Key="ScrollBarThumb">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <Border Name="Rect" Background="#424242"/>
                        <Border Name="HighRect" Background="#5e5e5e" Visibility="Hidden"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Rect" Property="Background" Value="#4F4F4F"></Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighRect" Storyboard.TargetProperty="Visibility" FillBehavior="HoldEnd" Duration="0">
                                        <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}"></DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighRect" Storyboard.TargetProperty="Visibility" FillBehavior="HoldEnd" Duration="0">
                                        <DiscreteObjectKeyFrame Value="{x:Static Visibility.Hidden}"></DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="ScrollBar" x:Key="ScrollBarTemplate" >
        <Track IsDirectionReversed="True" Minimum="{TemplateBinding Minimum}" Maximum="{TemplateBinding Maximum}" Value="{TemplateBinding Value}" Name="PART_Track">
            <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumb}"></Thumb>
            </Track.Thumb>
            <Track.DecreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollRepeatButton}"></RepeatButton>
            </Track.DecreaseRepeatButton>
            <Track.IncreaseRepeatButton>
                <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollRepeatButton}"/>
            </Track.IncreaseRepeatButton>
        </Track>
    </ControlTemplate>
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="{StaticResource WindowBackground}"></Setter>
        <Setter Property="Template" Value="{StaticResource ScrollBarTemplate}"></Setter>
    </Style>
    <Style TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <DockPanel>
                        <Grid>
                            <Ellipse x:Name="Circle" Width="12" Height="12" Fill="#333333"></Ellipse>
                            <Ellipse x:Name="Check" Width="6" Height="6" Fill="#cccccc" Visibility="Hidden"></Ellipse>
                        </Grid>
                        <ContentPresenter Margin="5,0,0,0"></ContentPresenter>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Circle" Property="Fill" Value="#3C3C3C"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Check" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource WhiteText}"></Setter>
    </Style>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource WhiteText}"></Setter>
    </Style>
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="#292929"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Foreground" Value="{StaticResource WhiteText}"></Setter>
    </Style>
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#3c3c3c"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}" Name="ContentBorder">
                        <ContentPresenter Margin="5,2,0,2"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#505050"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Background="{StaticResource Borders}" />
            <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" Stroke="{StaticResource WhiteText}" Fill="{StaticResource WhiteText}" VerticalAlignment="Center" Data="M 0,0 l 3,5 l 3,-5 Z"/>
        </Grid>
    </ControlTemplate>
    <Style TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" 
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Margin="6,5,23,5" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"></ContentPresenter>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"></ItemsPresenter>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#3c3c3c"></Setter>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <DockPanel>
                        <Grid>
                            <Rectangle x:Name="CheckRect" Width="18" Height="18" RadiusX="2" RadiusY="2" Fill="#333333"></Rectangle>
                            <Path x:Name="CheckPath" Stroke="#cccccc" Data="M 2,8 l 4,5 l 10,-9" Visibility="Hidden"></Path>
                        </Grid>
                        <ContentPresenter Margin="5,0,0,0"></ContentPresenter>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckRect" Property="Fill" Value="#3C3C3C"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckPath" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource WhiteText}"></Setter>
    </Style>
    <Style TargetType="TextBlock" x:Key="TextBlockStyle">
        <Setter Property="Foreground" Value="{StaticResource WhiteText}"></Setter>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource WhiteText}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHighlightBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <DockPanel>
                            <ToggleButton DockPanel.Dock="Top" Content="{TemplateBinding Header}" 
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid Background="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <Path Grid.Column="0" x:Name="NotExpandedPath" Stroke="#adadad" Margin="5" StrokeThickness="3" Data="M 0,0 l 7,7 l -7,7" VerticalAlignment="Center" Visibility="Collapsed"></Path>
                                            <Path Grid.Column="0" x:Name="ExpandedPath" Stroke="#adadad" Margin="5" StrokeThickness="3" Data="M 0,3 l 7,7 l 7,-7" VerticalAlignment="Center" Visibility="Collapsed"></Path>
                                            <ContentPresenter Grid.Column="1">
                                                <ContentPresenter.ContentTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}" Foreground="White" FontWeight="Bold" VerticalAlignment="Center" FontSize="12" Margin="5"/>
                                                    </DataTemplate>
                                                </ContentPresenter.ContentTemplate>
                                            </ContentPresenter>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="NotExpandedPath" Property="Stroke" Value="White"></Setter>
                                                <Setter TargetName="ExpandedPath" Property="Stroke" Value="White"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="ExpandedPath" Property="Visibility" Value="Visible"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter TargetName="NotExpandedPath" Property="Visibility" Value="Visible"></Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter DockPanel.Dock="Bottom" x:Name="ExpanderContent"></ContentPresenter>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Collapsed"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Window" x:Key="WindowStyle">
        <Setter Property="Background" Value="{StaticResource WindowBackground}"></Setter>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"></Setter>
    </Style>
</ResourceDictionary>